import { getEnvironmentVariable } from '../src/helpers';
import ChainableTest from '../src/chainable-test';
import * as data  from '../cypress/fixtures/data.json';

describe('Catering Lite - Place Order', () => {
    let test = new ChainableTest(getEnvironmentVariable('CATERING_LITE_URL_QA'));

    it('starts catering order', () => {
        const storeName = data.StoresList[2].Stores;
        const specialInstruction = "sweet and spicy";
        test.navigateToUrl('/')
            .delay(4000)
            .findElementByText('Start Your Catering Order', {elementType: 'button'}).triggerClick()
            .delay(4000)
            .findElement('input[data-at="store--search--autocomplete-text"]')
            .inputText(data.TestData[0].location)
            .delay(4000)
            .findFirstElement('div[class="autocomplete_dropdownContainer"] p').triggerClick()
            .delay(2000)
            .findElement('input[data-at="store--search--autocomplete-text"]').assertInputElementValueEquals(data.TestData[0].location)
            .findElement('button[name="Start Catering"]').triggerClick()
            .delay(2000)
            .assertCurrentUrlContains('store-results')
            .delay(2000)
            .findElement('div[data-at="store--list--card-0"] div button').triggerClick()
            .assertCurrentUrlContains('store-detail')
            .delay(4000)
            .findElement('input[data-at="store--details--OrderingOptions--date--calender"]').regularClick()
            .delay(4000)
            .findElement('abbr[aria-label="' + data.TestData[0].date + '"]').triggerClick()
            .delay(4000)
            .findElement('select[data-at="store--details--OrderingOptions--time-selector"]').selectValue(data.TestData[0].time)
            .delay(2000)
            .findElement('a[data-at="store--details--select-Store"]').triggerClick()
            .delay(4000)
            .findElementByAttr('text', data.Products[35][storeName], {elementType: 'h3'}, '1').triggerClick()
            .delay(2000)
            .assertCurrentUrlContains("products/")
            .delay(8000)
            .waitElementUntilVisible('button[data-at="product--details--addToCartButton"]').triggerClick()
            .delay(4000)
            .waitElementUntilVisible('button[data-at="product--details--add--to--cart--goToCartButton"]')
            .findElement('button[data-at="product--details--add--to--cart--goToCartButton"]').triggerClick()
            .delay(8000)
            .assertCurrentUrlContains('cart-detail')
            .findElement('button[data-at="cart--odersummery--checkoutButton"]').triggerClick()
            .delay(4000)
            .assertCurrentUrlContains('checkout')
            .findElement('input#firstName')
            .inputText(data.TestData[0].firstname)
            .findElement('input#lastName')
            .inputText(data.TestData[0].lastname)
            .findElement('input#phoneNumber')
            .inputText(data.TestData[0].phno)
            .findElement('input#emailAddress')
            .inputText(data.TestData[0].email)
            .delay(2000)
            .findElementByText('Have a promo code', {elementType: 'button'}).triggerClick()
            .delay(2000)
            .findElement('input#promoCode')
            .inputText(data.TestData[0].promocode)
            .findElement('button[data-at="promotion--promocode-button"]').triggerClick()
            .delay(6000)
            .findElement('textarea[data-at="checkout--specialInstruction-value"]')
            .inputText(specialInstruction)
            .delay(4000)
            .findElementByAttr('text', 'Continue to Payment', {elementType: 'button'}, '1').triggerClick()
            .delay(6000)
            .switchToIframe("myId")
            .delay(4000)
            .inputTextInIframe("exact_cardholder_name", data.TestData[0].cardholdername, "myId")
            .inputTextInIframe("x_card_num", data.TestData[0].cardnumber, "myId")
            .inputTextInIframe("x_exp_date", data.TestData[0].cardexpirydate, "myId")
            .inputTextInIframe("x_card_code", data.TestData[0].securitycode, "myId")
            .inputTextInIframe("x_address", data.TestData[0].address, "myId")
            .inputTextInIframe("x_city", data.TestData[0].city, "myId")
            .selectValueInIframe("x_state", data.TestData[0].state, "myId")
            .inputTextInIframe("x_zip", data.TestData[0].zipcode, "myId")
            .delay(2000)
            .triggerClickInIframe('input[value="Submit Order"]', "myId")
            .delay(8000)
            
    });
});